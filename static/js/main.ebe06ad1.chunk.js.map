{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/Nav.jsx","components/Dapp/Registration.jsx","components/Dapp/Proposal.jsx","components/Dapp/Vote.jsx","components/Dapp/State.jsx","components/Dapp/WhitelistTable.jsx","components/Dapp/ProposalsTable.jsx","components/Dapp/index.jsx","components/NoticeWrongNetwork.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","owner","voteStatus","vote","winningProposal","reducer","state","action","type","data","console","log","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","address","networks","Contract","err","error","methods","call","workflowStatus","useEffect","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","Nav","className","Registration","setEvents","runAddVoter","valeur","document","getElementById","addVoter","send","from","addEvent","blocks","fromBlock","toBlock","getPastEvents","eventList","id","placeholder","onClick","Proposal","runAddProposal","addProposal","Vote","runSetVote","setVote","State","setBvn","changeState","useState","h3","setH3","h5","setH5","functions","startProposalsRegistering","endProposalsRegistering","startVotingSession","endVotingSession","tallyVotes","winningProposalID","winner","WhitelistTable","map","event","returnValues","voterAddress","ProposalTable","proposalId","description","Dapp","registrationEvents","setRegistrationEvents","proposalEvents","setProposalEvents","setVoteStatus","seth3","p","setP","status","NoticeWrongNetwork","noContract","noReseau","App","ReactDOM","createRoot","render","StrictMode"],"mappings":"2j+XAIeA,G,OAFIC,2B,kDCFbC,EACE,OADFA,EAEW,kBAFXA,EAGgB,uBAHhBA,EAIK,WAGLC,EAAe,CACnBC,SAAU,KACVC,KAAM,KACNC,SAAU,KACVC,UAAW,KACXC,SAAU,KACVC,MAAO,KACPC,WAAY,KACZC,KAAM,KACNC,gBAAiB,MAGbC,EAAU,SAACC,EAAOC,GACtB,IAAQC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACd,OAAQD,GACN,KAAKd,EACH,OAAO,2BAAKY,GAAUG,GACxB,KAAKf,EACH,kCAAUY,GAAV,IAAiBJ,WAAYO,IAC/B,KAAKf,EAEH,OADAgB,QAAQC,IAAIF,GACZ,2BAAUH,GAAV,IAAiBF,gBAAiBK,IACpC,KAAKf,EACH,kCAAUY,GAAV,IAAiBH,KAAMM,IACzB,QACE,MAAM,IAAIG,MAAM,mC,OCsCPC,MAjEf,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAA0BC,qBAAWV,EAASV,GAA9C,mBAAOW,EAAP,KAAcU,EAAd,KAEMC,EAAOC,sBAAW,iDACtB,WAAMtB,GAAN,mGACMA,EADN,wBAEUC,EAAO,IAAIsB,IAAKA,IAAKC,eAAiB,uBAFhD,SAG2BvB,EAAKwB,IAAIC,kBAHpC,cAGUxB,EAHV,gBAI4BD,EAAKwB,IAAIE,IAAIC,QAJzC,OAIUzB,EAJV,OAKY0B,EAAQ7B,EAAR6B,IAER,IACEC,EAAU9B,EAAS+B,SAAS5B,GAAW2B,QACvC1B,EAAW,IAAIH,EAAKwB,IAAIO,SAASH,EAAKC,GACtC,MAAOG,GACPnB,QAAQoB,MAAMD,GAXpB,iBAcwB7B,EAAS+B,QAAQ9B,QAAQ+B,OAdjD,eAcU/B,EAdV,iBAe6BD,EAAS+B,QAAQE,iBAAiBD,OAf/D,QAeU9B,EAfV,OAkBIc,EAAS,CACPR,KAAMd,EACNe,KAAM,CAAEb,WAAUC,OAAMC,WAAUC,YAAWC,WAAUC,QAAOC,gBApBpE,4CADsB,sDAwBnB,IA4BL,OA1BAgC,qBAAU,WACR,IAAMC,EAAO,iDAAG,8FACd,IACQvC,EAAWwC,EAAQ,KACzBnB,EAAKrB,GACL,MAAOiC,GACPnB,QAAQoB,MAAMD,GALF,2CAAH,qDASbM,MACC,CAAClB,IAEJiB,qBAAU,WACR,IAAMG,EAAS,CAAC,eAAgB,mBAC1BC,EAAe,WACnBrB,EAAKX,EAAMV,WAIb,OADAyC,EAAOE,SAAQ,SAAAC,GAAC,OAAIC,OAAOC,SAASC,GAAGH,EAAGF,MACnC,WACLD,EAAOE,SAAQ,SAAAC,GAAC,OAAIC,OAAOC,SAASE,eAAeJ,EAAGF,SAEvD,CAACrB,EAAMX,EAAMV,WAId,cAAC,EAAWiD,SAAZ,CAAqBC,MAAO,CAC1BxC,QACAU,YAFF,SAIGF,KC5DQiC,EAFA,kBAAMC,qBAAWxD,ICAjB,SAASyD,IAEpB,IAAgBnD,EAAciD,IAAtBzC,MAAQR,SAEhB,OACI,iCACI,gCACI,6CACA,mBAAGoD,UAAU,OAAb,SAAqBpD,SCRtB,SAASqD,EAAT,GAAoC,IAAbC,EAAY,EAAZA,UAClC,EAAyCL,IAAjCzC,MAASN,EAAjB,EAAiBA,SAAUF,EAA3B,EAA2BA,SAGrBuD,EAAW,iDAAG,qGACZC,EAAOC,SAASC,eAAe,gBAAgBV,MADnC,SAEV9C,EAAS+B,QAAQ0B,SAASH,GAAQI,KAAK,CAAEC,KAAM7D,EAAS,KAF9C,OAIhB8D,IAJgB,2CAAH,qDAOXA,EAAQ,iDAAG,uGACTC,EAAS,CACTC,UAAW,EACXC,QAAS,UAHA,SAKW/D,EAASgE,cAAc,kBAAmBH,GALrD,OAKPI,EALO,OAMbb,EAAUa,GANG,2CAAH,qDAWd,OAFAL,IAGI,sBAAKV,UAAU,oBAAf,UACE,4CACA,uBAAO1C,KAAK,OAAO0D,GAAG,eAAeC,YAAY,qBACjD,wBAAQC,QAASf,EAAjB,0BC3BK,SAASgB,EAAT,GAAgC,IAAbjB,EAAY,EAAZA,UAC9B,EAA0CL,IAAlCzC,MAASN,EAAjB,EAAiBA,SAAUF,EAA3B,EAA2BA,SAErBwE,EAAc,iDAAG,qGACfhB,EAAOC,SAASC,eAAe,eAAeV,MAD/B,SAEb9C,EAAS+B,QAAQwC,YAAYjB,GAAQI,KAAK,CAAEC,KAAM7D,EAAS,KAF9C,OAGnB8D,IAHmB,2CAAH,qDAQdA,EAAQ,iDAAG,uGACTC,EAAS,CACTC,UAAW,EACXC,QAAS,UAHA,SAKW/D,EAASgE,cAAc,qBAAsBH,GALxD,OAKPI,EALO,OAMbb,EAAUa,GANG,2CAAH,qDAWd,OAFAL,IAGI,sBAAKV,UAAU,gBAAf,UACE,+CACA,uBAAO1C,KAAK,OAAO0D,GAAG,cAAcC,YAAY,sBAChD,wBAAQC,QAASE,EAAjB,oBC1BK,SAASE,IACpB,MACYzB,IADZ,IAAOzC,MAASR,EAAhB,EAAgBA,SAAUE,EAA1B,EAA0BA,SAC1BgB,EADA,EACAA,SAEMyD,EAAU,iDAAG,qGACTnB,EAASC,SAASC,eAAe,WAAWV,MADnC,SAET9C,EAAS+B,QAAQ2C,QAAQpB,GAAQI,KAAK,CAAEC,KAAM7D,EAAS,KAF9C,OAGfkB,EAAS,CACLR,KAAM,WACNC,KAAM6C,IALK,2CAAH,qDAWhB,OACI,sBAAKJ,UAAU,YAAf,UACE,uCACA,uBAAO1C,KAAK,SAAS0D,GAAG,UAAUC,YAAY,8BAC9C,wBAAQC,QAASK,EAAjB,oBClBK,SAASE,EAAT,GAAmD,IAAnCC,EAAkC,EAAlCA,OAAQ1E,EAA0B,EAA1BA,WAAY2E,EAAc,EAAdA,YACjD,EAA0E9B,IAA1E,IAAQzC,MAASN,EAAjB,EAAiBA,SAAUF,EAA3B,EAA2BA,SAAUK,EAArC,EAAqCA,KAAMC,EAA3C,EAA2CA,gBAAkBY,EAA7D,EAA6DA,SAC7D,EAAoB8D,mBAAS,kCAA7B,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAAoBF,mBAAS,sDAA7B,mBAAOG,EAAP,KAAWC,EAAX,KAGMC,EAAS,iDAAG,6FACTjF,EADS,OAET,MAFS,OAMT,MANS,OAUT,MAVS,QAcT,MAdS,QAiBT,MAjBS,wCAGNF,EAAS+B,QAAQqD,4BAA4B1B,KAAK,CAAEC,KAAM7D,EAAS,KAH7D,qCAuBZ+E,IAvBY,4CAON7E,EAAS+B,QAAQsD,0BAA0B3B,KAAK,CAAEC,KAAM7D,EAAS,KAP3D,yBAWNE,EAAS+B,QAAQuD,qBAAqB5B,KAAK,CAAEC,KAAM7D,EAAS,KAXtD,yBAeNE,EAAS+B,QAAQwD,mBAAmB7B,KAAK,CAAEC,KAAM7D,EAAS,KAfpD,mDAkBZ0F,IACAX,IAnBY,8CAsBN7E,EAAS+B,QAAQqD,4BAA4B1B,KAAK,CAAEC,KAAM7D,EAAS,KAtB7D,4CAAH,qDA4BP0F,EAAU,iDAAG,8GACXxF,EAAS+B,QAAQyD,aAAa9B,KAAK,CAAEC,KAAM7D,EAAS,KADzC,uBAEIE,EAAS+B,QAAQ0D,oBAAoBzD,OAFzC,OAEX0D,EAFW,OAGjB1E,EAAS,CACHR,KAAM,uBACNC,KAAMiF,IALK,2CAAH,qDA2DlB,OAhDDxD,qBAAU,WACT,OAAOhC,GACL,IAAK,IAsCL,QACE8E,EAAM,kCACNE,EAAM,sDACN,MArCF,IAAK,IACHF,EAAM,0BACNE,EAAM,2BACNN,EAAO,gDAAiD,2BACxD,MACF,IAAK,IACHI,EAAM,kBACNE,EAAM,+BACNN,EAAO,qDAAsD,IAC7D,MACF,IAAK,IACHI,EAAM,uBACNE,EAAM,kCAEJN,EAAO,gBADE,MAARzE,EACuB,kCAA8BA,EAE9B,wBAE1B,MACF,IAAK,IACH6E,EAAM,+BACNE,EAAM,2BAEJN,EAAO,kDADE,MAARzE,EACsD,kCAA8BA,EAE9B,IAEzD,MACF,IAAK,IACH6E,EAAM,gBACNE,EAAM,oBAENN,EADe,wBAAuBxE,EAAkB,gBACzC,kBAOlB,CAACF,EAAY0E,EAAQzE,EAAMC,IAIxB,sBAAK8C,UAAU,OAAf,UACE,6BAAK6B,IACL,6BAAKE,IACL,wBAAQb,QAASe,EAAjB,6BCpGO,SAASQ,EAAT,GAAmC,IAAVtD,EAAS,EAATA,OAEpC,OACI,sBAAKa,UAAU,QAAf,UACA,qDACC,gCACC,gCACCb,EAAOuD,KAAI,SAACC,GAAD,OACR,6BACE,6BAAKA,EAAMC,aAAaC,2BCTzB,SAASC,EAAT,GAAkC,IAAV3D,EAAS,EAATA,OACnC,OACE,sBAAKa,UAAU,QAAf,UACE,+CACA,kCACE,gCACE,+BACE,oBAAIA,UAAU,KAAd,gBACA,kDAGJ,gCACGb,EAAOuD,KAAI,SAACC,GAAD,OACV,+BACE,oBAAI3C,UAAU,KAAd,SAAoB2C,EAAMC,aAAaG,aACvC,6BAAKJ,EAAMC,aAAaI,4BCLzB,SAASC,IACtB,MAA6CpD,IAAtCzC,MAAQN,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,MAAOH,EAAhC,EAAgCA,SAChC,EAAoDgF,mBAAS,IAA7D,mBAAOsB,EAAP,KAA2BC,EAA3B,KACA,EAA4CvB,mBAAS,IAArD,mBAAOwB,EAAP,KAAuBC,EAAvB,KACA,EAAoCzB,qBAApC,mBAAO5E,EAAP,KAAmBsG,EAAnB,KAGA,EAAoB1B,mBAAS,gFAA7B,mBAAOC,EAAP,KAAW0B,EAAX,KACA,EAAkB3B,mBAAS,mBAA3B,mBAAO4B,EAAP,KAAUC,EAAV,KAEM/B,EAAS,SAACG,EAAI2B,GAChBD,EAAM1B,GACN4B,EAAKD,IAGH7B,EAAW,iDAAG,8GACG7E,EAAS+B,QAAQE,iBAAiBD,OADrC,OACZ4E,EADY,OAElBJ,EAAcI,GAFI,2CAAH,qDAQjB,OAFA/B,IAGE,sBAAK3B,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,2CACA,6BAAK6B,IACL,4BAAI2B,OAGR,sBAAKxD,UAAU,QAAf,UAEIjD,IAAUH,EAAS,GAAM,cAACqD,EAAD,CAAcC,UAAWiD,IAA2B,6BAE/E,cAAChC,EAAD,CAAUjB,UAAWmD,IACrB,cAAC/B,EAAD,CAAMI,OAAQA,IAEZ3E,IAAUH,EAAS,GAAM,qCACvB,cAAC6F,EAAD,CAAgBtD,OAAQ+D,IACxB,cAACzB,EAAD,CAAOC,OAAQA,EAAQ1E,WAAYA,EAAY2E,YAAaA,OAE5D,qCAAE,wBACJ,2BAGF,cAACmB,EAAD,CAAe3D,OAAQiE,UCpCdO,MAjBf,WACE,IAAQvG,EAAUyC,IAAVzC,MAEFwG,EAAa,wGACbC,EAAW,mHAEjB,OACE,qBAAK7D,UAAU,OAAf,SAEK5C,EAAMV,SACJU,EAAMN,SACL,cAACmG,EAAD,IADgBY,EADFD,K,OCUXE,MAjBf,WAGE,OACE,cAAC,EAAD,UACE,sBAAK9C,GAAG,MAAR,UACA,iCACE,cAACjB,EAAD,MAEA,qBAAKC,UAAU,YAAf,SACE,cAAC,EAAD,YCVG+D,IAASC,WAAW3D,SAASC,eAAe,SACpD2D,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,S","file":"static/js/main.ebe06ad1.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n  setVoteStatus: 'SET_VOTE_STATUS',\n  setWinningProposal: 'SET_WINNING_PROPOSAL',\n  setVote: 'SET_VOTE'\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null,\n  owner: null,\n  voteStatus: null,\n  vote: null,\n  winningProposal: null,\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    case actions.setVoteStatus:\n      return{...state, voteStatus: data};\n    case actions.setWinningProposal:\n      console.log(data)\n      return{...state, winningProposal: data};\n    case actions.setVote:\n      return{...state, vote: data};\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect} from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n        } catch (err) {\n          console.error(err);\n        }\n\n        const owner = await contract.methods.owner().call();\n        const voteStatus = await contract.methods.workflowStatus().call();\n        \n        \n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract, owner, voteStatus}\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","import useEth from \"../contexts/EthContext/useEth\";\n\n\nexport default function Nav() {\n\n    const { state: {accounts} } = useEth();\n\n    return(\n        <header>\n            <nav>\n                <h2>Voting Dapp</h2>\n                <p className=\"addr\">{accounts}</p>\n            </nav>\n        </header>\n        \n    );\n\n}\n\n","import useEth from \"../../contexts/EthContext/useEth\";\n\n\nexport default function Registration({setEvents}) {\n    const { state: { contract, accounts} } = useEth();\n    \n\n    const runAddVoter = async () => {\n        let valeur=document.getElementById(\"voterAddress\").value;\n        await contract.methods.addVoter(valeur).send({ from: accounts[0] })\n        // getting the events  \n        addEvent()\n    }\n\n    const addEvent = async() =>{\n        let blocks = {\n            fromBlock: 0,                  //Number || \"earliest\" || \"pending\" || \"latest\"\n            toBlock: 'latest'\n        };\n        const eventList = await contract.getPastEvents('VoterRegistered', blocks);\n        setEvents(eventList);\n    }\n\n    addEvent()\n\n    return(\n        <div className=\"registration card\">\n          <h4>WhiteList:</h4>\n          <input type=\"text\" id=\"voterAddress\" placeholder=\"Adresse du voter\"/>\n          <button onClick={runAddVoter}>Add voter</button>\n        </div>\n    );\n\n}","import useEth from \"../../contexts/EthContext/useEth\";\n\nexport default function Proposal({setEvents}) {\n    const { state: { contract, accounts } } = useEth();\n\n    const runAddProposal = async () => {\n        let valeur=document.getElementById(\"addProposal\").value;\n        await contract.methods.addProposal(valeur).send({ from: accounts[0] })\n        addEvent()\n\n        \n    }\n\n    const addEvent = async()=>{\n        let blocks = {\n            fromBlock: 0,                  //Number || \"earliest\" || \"pending\" || \"latest\"\n            toBlock: 'latest'\n        };\n        const eventList = await contract.getPastEvents('ProposalRegistered', blocks);\n        setEvents(eventList);\n    }\n\n    addEvent()\n\n    return(\n        <div className=\"proposal card\">\n          <h4>Add Proposal:</h4>\n          <input type=\"text\" id=\"addProposal\" placeholder=\"Votre description\"/>\n          <button onClick={runAddProposal}>Add</button>\n        </div>\n    );\n\n}","import useEth from \"../../contexts/EthContext/useEth\";\n\nexport default function Vote() {\n    const {state: { accounts, contract},\n    dispatch} = useEth();\n\n    const runSetVote = async() => {\n        const valeur = document.getElementById(\"voterId\").value;\n        await contract.methods.setVote(valeur).send({ from: accounts[0] })\n        dispatch({\n            type: 'SET_VOTE',// ou action.tonAction\n            data: valeur, // ou ta data\n         })\n\n        \n    }\n        \n    return(\n        <div className=\"vote card\">\n          <h4>Vote:</h4>\n          <input type=\"number\" id=\"voterId\" placeholder=\"Entrez l'id de votre vote\"/>\n          <button onClick={runSetVote}>Set</button>\n        </div>\n    );\n\n}\n\n\n\n\n","import { useEffect, useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nexport default function State({setBvn, voteStatus, changeState}) {\n  const { state: { contract, accounts, vote, winningProposal}, dispatch } = useEth(); \n  const [h3, setH3] = useState(\"Vous avez finis de whitelist ?\");\n  const [h5, setH5] = useState(\"Cliquez ici pour lancer le temps des propositions:\");\n\n  // ----------- Functions -----------\n  const functions = async () =>{\n    switch(voteStatus){\n      case '0':\n        await contract.methods.startProposalsRegistering().send({ from: accounts[0] });\n        changeState()\n        break;\n      case '1':\n        await contract.methods.endProposalsRegistering().send({ from: accounts[0] });\n        changeState()\n        break;\n      case '2':\n        await contract.methods.startVotingSession().send({ from: accounts[0] });\n        changeState()\n        break;\n      case '3':\n        await contract.methods.endVotingSession().send({ from: accounts[0] });\n        break;\n      case '4':\n        tallyVotes()\n        changeState()\n        break;\n      default:\n        await contract.methods.startProposalsRegistering().send({ from: accounts[0] });\n        changeState()\n        break;\n      }\n    }\n\n    const tallyVotes = async() =>{\n      await contract.methods.tallyVotes().send({ from: accounts[0] });\n      const winner = await contract.methods.winningProposalID().call();\n      dispatch({\n            type: 'SET_WINNING_PROPOSAL',// ou action.tonAction\n            data: winner, // ou ta data\n         })\n    }\n\n // ----------- Status -----------\n\n useEffect(()=>{\n  switch(voteStatus){\n    case '0':\n      setH3(\"Vous avez finis de whitelist ?\");\n      setH5(\"Cliquez ici pour lancer le temps des propositions:\");\n      break;\n    case '1':\n      setH3(\"Assez de proposition ?\");\n      setH5(\"Cliquez ici pour finir:\");\n      setBvn(\"Nous en sommes en plein ajout de proposition!\", \"Proposez en une aussi !\");\n      break;\n    case '2':\n      setH3(\"Pret a voter ?\");\n      setH5(\"Cliquez ici pour commencer:\");\n      setBvn(\"Le proprietaire ne va pas tarder a lancer le vote!\", \"\");\n      break;\n    case '3':\n      setH3(\"Le vote est finis ?\");\n      setH5(\"Si oui, plus qu'a cliquer ici:\");\n      if(vote != null){\n        setBvn(\"A vos votes !\", \"Vous avez voté pour le N°\" + vote)\n      }else{\n        setBvn(\"A vos votes !\", \"Fais le bon choix :)\");\n      }\n      break;\n    case '4':\n      setH3(\"Pret a sortir le resultat ?\");\n      setH5(\"Cliquez ici pour finir:\");\n      if(vote != null){\n        setBvn(\"Votes finis, vous aurez bientot le résultat!\", \"Vous avez voté pour le N°\" + vote);\n      }else{\n        setBvn(\"Votes finis, vous aurez bientot le résultat!\", \"\");\n      }\n      break;\n    case '5':\n      setH3(\"Vote finis !\");\n      setH5(\"Ca vous a plus ?\");\n      const winner = \"La proposition N° \" + winningProposal + \" a gagné !\"\n      setBvn(winner, \"Vote finis!\");\n      break;\n    default:\n      setH3(\"Vous avez finis de whitelist ?\");\n      setH5(\"Cliquez ici pour lancer le temps des propositions:\");\n      break;\n  }\n },[voteStatus, setBvn, vote, winningProposal]);\n\n\n  return(\n      <div className=\"card\">\n        <h3>{h3}</h3>\n        <h5>{h5}</h5>\n        <button onClick={functions}>Change State</button>\n      </div>\n    );\n\n}\n","export default function WhitelistTable({events}) {\n    \n    return(\n        <div className=\"table\">\n        <h4>Addresses Whitelist</h4>\n         <table>\n          <tbody>\n          {events.map((event)=>(\n              <tr>\n                <td>{event.returnValues.voterAddress}</td>\n              </tr>\n          ))}\n          </tbody>\n          </table>\n        </div>\n    );\n}\n\n\n","export default function ProposalTable({events}) {\n    return(\n      <div className=\"table\">\n        <h4>Propositions:</h4>\n        <table>\n          <thead>\n            <tr>\n              <th className=\"id\">ID</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {events.map((event) => (\n              <tr>\n                <td className=\"id\">{event.returnValues.proposalId}</td>\n                <td>{event.returnValues.description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n}\n\n","import useEth from \"../../contexts/EthContext/useEth\";\nimport { useState} from \"react\";\nimport Registration from \"./Registration\";\nimport Proposal from \"./Proposal\";\nimport Vote from \"./Vote\";\nimport State from \"./State\";\nimport WhitelistTable from \"./WhitelistTable\"\nimport ProposalTable from \"./ProposalsTable\";\n\n\nexport default function Dapp() {\n  const {state: {contract, owner, accounts}} = useEth();\n  const [registrationEvents, setRegistrationEvents] = useState([]);\n  const [proposalEvents, setProposalEvents] = useState([]);\n  const [voteStatus, setVoteStatus] = useState();\n  \n\n  const [h3, seth3] = useState(\"Le proprietaire est acuellement en train d'ajouter les voters en whitelist !\");\n  const [p, setP] = useState(\"Attendez un peu\");\n\n  const setBvn = (h3, p)=> {\n      seth3(h3);\n      setP(p);\n  }\n\n  const changeState = async ()=>{\n    const status = await contract.methods.workflowStatus().call();\n    setVoteStatus(status)\n    \n  }\n\n  changeState()\n\n  return (\n    <div className=\"Dapp\">\n      <div className=\"bienvenue\">\n        <h1>Bienvenue</h1>\n        <h3>{h3}</h3>\n        <p>{p}</p>  \n      </div>\n  \n    <div className=\"cards\">\n      {\n        owner === accounts[0]  ? <Registration setEvents={setRegistrationEvents}/> : <></>\n      }\n      <Proposal setEvents={setProposalEvents}/>\n      <Vote setBvn={setBvn}/>\n      {\n        owner === accounts[0]  ? <>\n          <WhitelistTable events={registrationEvents}/>\n          <State setBvn={setBvn} voteStatus={voteStatus} changeState={changeState}/>\n        </>\n        : <><div></div>\n        <div></div>\n        </>\n      }\n      <ProposalTable events={proposalEvents}/>\n    </div>\n    </div>\n  );\n}","import useEth from \"../contexts/EthContext/useEth\";\nimport Dapp from \"./Dapp\";\n\nfunction NoticeWrongNetwork() {\n  const { state } = useEth();\n    \n  const noContract = <p>⚠️ Le contrat Voting n'a pas été trouvé ⚠️</p>;\n  const noReseau = <p>⚠️ MetaMask n'est pas encore connecté au bon réseau ! ⚠️</p>;\n\n  return (\n    <div className=\"demo\">\n      {\n        !state.artifact ? noContract : \n          !state.contract ? noReseau : \n            <Dapp /> \n      }\n    </div>\n  );\n}\n\nexport default NoticeWrongNetwork;\n\n","import { EthProvider } from \"./contexts/EthContext\";\nimport Nav from \"./components/Nav\";\nimport NoticeWrongNetwork from \"./components/NoticeWrongNetwork\";\nimport \"./App.css\";\n\nfunction App() {\n\n\n  return (\n    <EthProvider>\n      <div id=\"App\" >\n      <header>\n        <Nav />\n      </header>\n        <div className=\"container\">\n          <NoticeWrongNetwork  />\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}